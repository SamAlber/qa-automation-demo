name: Flask QA CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    name: Build and Test Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: flask-login-app:test

      - name: Run tests inside container
        run: docker run --rm flask-login-app:test pytest tests/

  trivy-scan:
    name: Security Scan with Trivy
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Install Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: flask-login-app:test
          format: 'table'
          exit-code: '0'  # Report only; don't fail the pipeline
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'


# In my CI pipeline, I install dependencies on the GitHub runner because it executes tests outside of my Docker image. 
# This keeps the CI fast and clean. For full reproducibility, I could switch to Docker-based CI runs â€” but for this project, I optimized for simplicity and clarity.
